merle : An erlang based memcached client.

Version : pre 0.1
Author : Joe Williams
Info : http://github.com/joewilliams/merle/

This code is available as Open Source Software under the MIT license.

Usage:

* Start it up *

2> merle:start_link("localhost", 11211).
{ok,<0.38.0>}

* Set and get some data* 

9> merle:set("b", "1", "0", [asdf,[{asdf, asdf}, asdf]]).
["STORED"]
10> merle:get("b").                                       
[[asdf,[{asdf,asdf},asdf]]]

* Get the memcached version *

11> merle:version().
["VERSION 1.2.6"]


* Get memcached stats *

12> merle:stats().  
["STAT pid 12177","STAT uptime 6146","STAT time 1231993128",
 "STAT version 1.2.6","STAT pointer_size 64",
 "STAT rusage_user 0.008000","STAT rusage_system 0.000000",
 "STAT curr_items 2","STAT total_items 2",
 "STAT bytes 128976","STAT curr_connections 2",
 "STAT total_connections 3","STAT connection_structures 3",
 "STAT cmd_get 3","STAT cmd_set 2","STAT get_hits 3",
 "STAT get_misses 0","STAT evictions 0",
 "STAT bytes_read 128911","STAT bytes_written 257735",
 "STAT limit_maxbytes 67108864","STAT threads 1","END"]


API:

start_link(Host, Port)

stats()

version()

get(Key)

delete(Key, Time)

set(Key, Flag, ExpTime, Data)

add(Key, Flag, ExpTime, Data)

replace(Key, Flag, ExpTime, Data)

append(Key, Data)

prepend(Key, Data)

quit()

stats_args() *untested*

cas(Key, Flag, ExpTime, CasUniq, Data) *untested

increment(Key, Data) *untested

decrement(Key, Data) *untested


